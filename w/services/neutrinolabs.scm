(define-module (w services neutrinolabs)
  #:use-module (w packages neutrinolabs)
  #:use-module (gnu services)
  #:use-module (gnu services shepherd)
  #:use-module (gnu system pam)
  #:use-module (guix gexp)
  #:use-module (guix records)
  #:use-module (srfi srfi-1)
  #:export (xrdp-configuration
            xrdp-configuration?
            xrdp-service-type))

(define-record-type* <xrdp-configuration> xrdp-configuration
  make-xrdp-configuration
  xrdp-configuration?
  (xrdp xrdp-configuration-xrdp
        (default xrdp))
  (port xrdp-configuration-port
        (default '("3389")))
  (security-layer xrdp-configuration-security-layer
                  (default 'negotiate))
  (crypt-level xrdp-configuration-crypt-level
               (default 'high)))

(define (xrdp-config-file config)
  "Return the xrdp.ini file corresponding to CONFIG."
  (computed-file
   "xrdp.ini"
   #~(begin
       (call-with-output-file #$output
         (lambda (port)
           (scm->ini
            port
            (xrdp-configuration->scm #$config)))))))

;; (define (xrdp-shepherd-service config)
;;   (list (shepherd-service
;;          (documentation "XRDP server.")
;;          (requirement '(syslogd loopback)) ; seems right
;;          (provision '(xrdp))               ; I guess?

;;          ;; TODO
;;          (start)
;;          ;; TODO
;;          (stop))))

(define (xrdp-pam-services config)
  "Return a list of <pam-services> for xrdp with CONFIG."
  (list (unix-pam-service
         "xrdp-sesman"
         #:login-uid? #t)))

(define xrdp-service-type
  (service-type (name 'xrdp)
                (description "Run the XRDP server, @command{xrdp}.")
                (extensions
                 (list ;; (service-extension shepherd-root-service-type
                  ;;                    xrdp-shepherd-service)
                  (service-extension pam-root-service-type
                                     xrdp-pam-services)
                  ;; (service-extension activation-service-type
                  ;;                    xrdp-activation)
                  ))))

;; based on guile-ini
(define (scm->ini port data)
  (define (write-section port section)
    (let ((title (car section))
          (props (cdr section)))
      (when title
        (format port "[~a]~%" title))
      (for-each (lambda (prop)
                  (let ((key (car prop)))
                    (cond ((string? key)
                           (format port "~a=~a~%" key (cadr prop)))
                          ((equal? key 'comment)
                           (format port "; ~a~%" (cadr prop)))
                          ((equal? key 'newline)
                           (newline port))
                          (else
                           (error "Unknown property type" prop)))))
                props))
    (newline port))
  (let* ((global (find (lambda (section)
                         (not (car section)))
                       data))
         (data (if global
                   (delete global data equal?)
                   data)))
    (when global
      (write-section port global))
    (for-each (lambda (section)
                (write-section port section))
     data)))

(define (xrdp-configuration->scm config)
  ;; default values as of xrdp v0.9.17
  `((#f
     (comment "generated by 'xrdp-service'"))
    ("Globals"
     (comment "xrdp.ini file version number")
     ("ini_version" 1)
     (newline)
     (comment "fork a new process for each incoming connection")
     ("fork" "true")
     (newline)
     (comment "ports to listen on, number alone means listen on all interfaces")
     (comment "0.0.0.0 or :: if ipv6 is configured")
     (comment "space between multiple occurrences")
     (comment "ALL specified interfaces must be UP when xrdp starts, otherwise xrdp will fail to start")
     (comment "")
     (comment "Examples:")
     (comment "  port=3389")
     (comment "  port=unix://./tmp/xrdp.socket")
     (comment "  port=tcp://.:3389                           127.0.0.1:3389")
     (comment "  port=tcp://:3389                            *:3389")
     (comment "  port=tcp://<any ipv4 format addr>:3389      192.168.1.1:3389")
     (comment "  port=tcp6://.:3389                          ::1:3389")
     (comment "  port=tcp6://:3389                           *:3389")
     (comment "  port=tcp6://{<any ipv6 format addr>}:3389   {FC00:0:0:0:0:0:0:1}:3389")
     (comment "  port=vsock://<cid>:<port>")
     ("port" ,(string-join (xrdp-configuration-port config) " " 'strict-infix))
     (newline)
     (comment "'port' above should be connected to with vsock instead of tcp")
     (comment "use this only with number alone in port above")
     (comment "prefer use vsock://<cid>:<port> above")
     ("use_vsock" "false")
     (newline)
     (comment "regulate if the listening socket use socket option tcp_nodelay")
     (comment "no buffering will be performed in the TCP stack")
     ("tcp_nodelay" "true")
     (newline)
     (comment "regulate if the listening socket use socket option keepalive")
     (comment "if the network connection disappear without close messages the connection will be closed")
     ("tcp_keepalive" "true")
     (newline)
     (comment "set tcp send/recv buffer (for experts)")
     ("#tcp_send_buffer_bytes" 32768)
     ("#tcp_recv_buffer_bytes" 32768)
     (newline)
     (comment "security layer can be 'tls', 'rdp' or 'negotiate'")
     (comment "for client compatible layer")
     ("security_layer" ,(xrdp-configuration-security-layer config))
     (newline)
     (comment "minimum security level allowed for client for classic RDP encryption")
     (comment "use tls_ciphers to configure TLS encryption")
     (comment "can be 'none', 'low', 'medium', 'high', 'fips'")
     ("crypt_level" ,(xrdp-configuration-crypt-level config))
     (newline)
     (comment "X.509 certificate and private key")
     (comment "openssl req -x509 -newkey rsa:2048 -nodes -keyout key.pem -out cert.pem -days 365")
     ("certificate" "")
     ("key_file" "")
     (newline)
     (comment "set SSL protocols")
     (comment "can be comma separated list of 'SSLv3', 'TLSv1', 'TLSv1.1', 'TLSv1.2', 'TLSv1.3'")
     ("ssl_protocols" ,(string-join '("TLSv1.2" "TLSv1.3") ", "))
     (comment "set TLS cipher suites")
     ("#tls_ciphers" "HIGH")
     (newline)
     (comment "concats the domain name to the user if set for authentication with the separator")
     (comment "for example when the server is multi homed with SSSd")
     ("#domain_user_separator" "@")
     (newline)
     (comment "The following options will override the keyboard layout settings.")
     (comment "These options are for DEBUG and are not recommended for regular use.")
     ("#xrdp.override_keyboard_type" "0x04")
     ("#xrdp.override_keyboard_subtype" "0x01")
     ("#xrdp.override_keylayout" "0x00000409")
     (newline)
     (comment "Section name to use for automatic login if the client sends username")
     (comment "and password. If empty, the domain name sent by the client is used.")
     (comment "If empty and no domain name is given, the first suitable section in")
     (comment "this file will be used.")
     ("autorun" "")
     (newline)
     ("allow_channels" "true")
     ("allow_multimon" "true")
     ("bitmap_cache" "true")
     ("bitmap_compression" "true")
     ("bulk_compression" "true")
     ("#hidelogwindow" "true")
     ("max_bpp" 32)
     ("new_cursors" "true")
     (comment "fastpath - can be 'input', 'output', 'both', 'none'")
     ("use_fastpath" "both")
     (comment "when true, userid/password *must* be passed on cmd line")
     ("#require_credentials" "true")
     (comment "when true, the userid will be used to try to authenticate")
     ("#enable_token_login" "true")
     (comment "You can set the PAM error text in a gateway setup (MAX 256 chars)")
     ("#pamerrortxt" "change your password according to policy at http://url")
     (newline)
     (comment "")
     (comment "colors used by windows in RGB format")
     (comment "")
     ("blue" "009cb5")
     ("grey" "dedede")
     ("#black" "000000")
     ("#dark_grey" "808080")
     ("#blue" "08246b")
     ("#dark_blue" "08246b")
     ("#white" "ffffff")
     ("#red" "ff0000")
     ("#green" "00ff00")
     ("#background" "626c72")
     (newline)
     (comment "")
     (comment "configure login screen")
     (comment "")
     (newline)
     (comment "Login Screen Window Title")
     ("#ls_title" "My Login Title")
     (newline)
     (comment "top level window background color in RGB format")
     ("ls_top_window_bg_color" "009cb5")
     (newline)
     (comment "width and height of login screen")
     (comment "")
     (comment "The default height allows for about 5 fields to be comfortably displayed")
     (comment "above the buttons at the bottom. To display more fields, make <ls_height>")
     (comment "larger, and also increase <ls_btn_ok_y_pos> and <ls_btn_cancel_y_pos>")
     (comment "below")
     (comment "")
     ("ls_width" 350)
     ("ls_height" 430)
     (newline)
     (comment "login screen background color in RGB format")
     ("ls_bg_color" "dedede")
     (newline)
     (comment "optional background image filename (bmp format).")
     ("#ls_background_image" "")
     (newline)
     (comment "logo")
     (comment "full path to bmp-file or file in shared folder")
     ("ls_logo_filename" "")
     ("ls_logo_x_pos" 55)
     ("ls_logo_y_pos" 50)
     (newline)
     (comment "for positioning labels such as username, password etc")
     ("ls_label_x_pos" 30)
     ("ls_label_width" 65)
     (newline)
     (comment "for positioning text and combo boxes next to above labels")
     ("ls_input_x_pos" 110)
     ("ls_input_width" 210)
     (newline)
     (comment "y pos for first label and combo box")
     ("ls_input_y_pos" 220)
     (newline)
     (comment "OK button")
     ("ls_btn_ok_x_pos" 142)
     ("ls_btn_ok_y_pos" 370)
     ("ls_btn_ok_width" 85)
     ("ls_btn_ok_height" 30)
     (newline)
     (comment "Cancel button")
     ("ls_btn_cancel_x_pos" 237)
     ("ls_btn_cancel_y_pos" 370)
     ("ls_btn_cancel_width" 85)
     ("ls_btn_cancel_height" 30)
     (newline))
    ("Logging"
     (comment "Note: Log levels can be any of: core, error, warning, info, debug, or trace")
     ("LogFile" "xrdp.log")
     ("LogLevel" "INFO")
     ("EnableSyslog" "true")
     ("#SyslogLevel" "INFO")
     ("#EnableConsole" "false")
     ("#ConsoleLevel" "INFO")
     ("#EnableProcessId" "false")
     (newline))
    ("LoggingPerLogger"
     (comment "Note: per logger configuration is only used if xrdp is built with")
     (comment "--enable-devel-logging")
     ("#xrdp.c" "INFO")
     ("#main()" "INFO")
     (newline))
    ("Channels"
     (comment "Channel names not listed here will be blocked by XRDP.")
     (comment "You can block any channel by setting its value to false.")
     (comment "IMPORTANT! All channels are not supported in all use")
     (comment "cases even if you set all values to true.")
     (comment "You can override these settings on each session type")
     (comment "These settings are only used if allow_channels=true")
     ("rdpdr" "true")
     ("rdpsnd" "true")
     ("drdynvc" "true")
     ("cliprdr" "true")
     ("rail" "true")
     ("xrdpvr" "true")
     ("tcutils" "true")
     (newline)
     (comment "for debugging xrdp, in section xrdp1, change port=-1 to this:")
     ("#port" "/tmp/.xrdp/xrdp_display_10")
     (newline)
     (newline)
     (comment "")
     (comment "Session types")
     (comment "")
     (newline)
     (comment "Some session types such as Xorg, X11rdp and Xvnc start a display server.")
     (comment "Startup command-line parameters for the display server are configured")
     (comment "in sesman.ini. See and configure also sesman.ini."))
    ("Xorg"
     ("name" "Xorg")
     ("lib" "libxup.so")
     ("username" "ask")
     ("password" "ask")
     ("ip" "127.0.0.1")
     ("port" -1)
     ("code" 20)
     (newline))
    ("Xvnc"
     ("name" "Xvnc")
     ("lib" "libvnc.so")
     ("username" "ask")
     ("password" "ask")
     ("ip" "127.0.0.1")
     ("port" -1)
     ("#xserverbpp" 24)
     ("#delay_ms" 2000)
     (comment "Disable requested encodings to support buggy VNC servers")
     (comment "(1 = ExtendedDesktopSize)")
     ("#disabled_encodings_mask" 0)
     (comment "Use this to connect to a chansrv instance created outside of sesman")
     (comment "(e.g. as part of an x11vnc console session). Replace '0' with the")
     (comment "display number of the session")
     ("#chansrvport" "DISPLAY(0)")
     (newline)
     (comment "Generic VNC Proxy")
     (comment "Tailor this to specific hosts and VNC instances by specifying an ip")
     (comment "and port and setting a suitable name."))
    ("neutrinordp-any"
     ("name" "neutrinordp-any")
     (comment "To use this section, you should build xrdp with configure option")
     (comment "--enable-neutrinordp.")
     ("lib" "libxrdpneutrinordp.so")
     ("ip" "ask")
     ("port" "ask3389")
     ("username" "ask")
     ("password" "ask")
     (comment "Uncomment the following lines to enable PAM authentication for proxy")
     (comment "connections.")
     ("#pamusername" "ask")
     ("#pampassword" "ask")
     ("#pamsessionmng" "127.0.0.1")
     (comment "Currently NeutrinoRDP doesn't support dynamic resizing. Uncomment")
     (comment "this line if you're using a client which does.")
     ("#enable_dynamic_resizing" "false")
     (comment "By default, performance settings requested by the RDP client are ignored")
     (comment "and chosen by NeutrinoRDP. Uncomment this line to allow the user to")
     (comment "select performance settings in the RDP client.")
     ("#perf.allow_client_experiencesettings" "true")
     (comment "Override any experience setting by uncommenting one or more of the")
     (comment "following lines.")
     ("#perf.wallpaper" "false")
     ("#perf.font_smoothing" "false")
     ("#perf.desktop_composition" "false")
     ("#perf.full_window_drag" "false")
     ("#perf.menu_anims" "false")
     ("#perf.themes" "false")
     ("#perf.cursor_blink" "false")
     (comment "By default NeutrinoRDP supports cursor shadows. If this is giving")
     (comment "you problems (e.g. cursor is a black rectangle) try disabling cursor")
     (comment "shadows by uncommenting the following line.")
     ("#perf.cursor_shadow" "false")
     (comment "By default, NeutrinoRDP uses the keyboard layout of the remote RDP Server.")
     (comment "If you want to tell the remote the keyboard layout of the RDP Client,")
     (comment "by uncommenting the following line.")
     ("#neutrinordp.allow_client_keyboardLayout" "true")
     (comment "The following options will override the remote keyboard layout settings.")
     (comment "These options are for DEBUG and are not recommended for regular use.")
     ("#neutrinordp.override_keyboardLayout_mask" "0x0000FFFF")
     ("#neutrinordp.override_kbd_type" "0x04")
     ("#neutrinordp.override_kbd_subtype" "0x01")
     ("#neutrinordp.override_kbd_fn_keys" 12)
     ("#neutrinordp.override_kbd_layout" "0x00000409")
     (newline)
     (comment "You can override the common channel settings for each session type")
     ("#channel.rdpdr" "true")
     ("#channel.rdpsnd" "true")
     ("#channel.drdynvc" "true")
     ("#channel.cliprdr" "true")
     ("#channel.rail" "true")
     ("#channel.xrdpvr" "true"))))

(define (test)
  "Run (test) to run test. :-)"
  (scm->ini
   (current-output-port)
   (xrdp-configuration->scm (xrdp-configuration))))
